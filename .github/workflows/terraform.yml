name: Terraform CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  terraform:
    name: Terraform Validate
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.7

    - name: Terraform Format Check
      run: terraform fmt -check -recursive

    - name: Terraform Init
      run: terraform init -backend=false

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan -var-file="terraform-enterprise.tfvars.example" -var="vpn_shared_key=dummy-key-for-ci" -out=plan.out
      continue-on-error: true

    - name: Comment PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const output = `#### Terraform Validation ✅
          
          **Format Check**: ${{ steps.fmt.outcome == 'success' && '✅' || '❌' }}
          **Initialization**: ${{ steps.init.outcome == 'success' && '✅' || '❌' }}
          **Validation**: ${{ steps.validate.outcome == 'success' && '✅' || '❌' }}
          **Plan**: ${{ steps.plan.outcome == 'success' && '✅' || '❌' }}
          
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })